swagger: "2.0"
info:
  version: "1.0.0"
  title: "shorturl"
basePath: "/v1"
tags:
  - name: "home"
    description: "Home Page"
  - name: "url"
    description: "Everything about the url handling"
  - name: "user"
    description: "Operations about user"
  - name: "favorite"
    description: "Favorite url feature"
schemes:
  - "http"
paths:
  /:
    get:
      tags:
        - "home"
      summary: "Home to shorturl services."
      description: "Home to shorturl services."
      operationId: "home_url"
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful connection."
        "404":
          description: "page not found"
      x-swagger-router-controller: "shorturl.web.controllers.home_controller"
  /url:
    post:
      tags:
        - "url"
      summary: "Generate a short url for a long url."
      description: "Generate a short url for a long url."
      operationId: "create_url"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          description: "api key for generating short url"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/CreateUrlObj"
      responses:
        "200":
          description: "Return short url"
          schema:
            $ref: "#/definitions/ShortUrlObj"
        "400":
          description: "Invalid input syntax"
      x-swagger-router-controller: "shorturl.web.controllers.urls_controller"
  /url/{shorturl}:
    get:
      tags:
        - "url"
      summary: "Redirects to long url."
      description: ""
      operationId: "redirect_url"
      produces:
        - "application/json"
      parameters:
        - name: "shorturl"
          in: "path"
          description: "shorturl for the fetching the corresponding long url"
          required: true
          type: "string"
      responses:
        "303":
          description: "Redirection successful."
        "404":
          description: "shorturl not found"
      x-swagger-router-controller: "shorturl.web.controllers.urls_controller"
    delete:
      tags:
        - "url"
      summary: "Deletes the short url"
      description: ""
      operationId: "delete_url"
      produces:
        - "applicaiton/json"
      parameters:
        - name: "api_key"
          in: "header"
          description: "api key for deleting shorturl"
          required: true
          type: "string"
        - name: "shorturl"
          in: "path"
          description: "shorturl for deleting the shorturl"
          required: true
          type: "string"
      responses:
        "200":
          description: "Successfully deleted"
        "404":
          description: "shorturl not found"
      x-swagger-router-controller: "shorturl.web.controllers.urls_controller"
  /user:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: ""
      operationId: "create_user"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object for creating new user."
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Return api key"
          schema:
            $ref: "#/definitions/ApiKeyObj"
        "406":
          description: "User name already exists"
      x-swagger-router-controller: "shorturl.web.controllers.users_controller"
  /user/{username}:
    put:
      tags:
        - "user"
      summary: "Update user"
      description: ""
      operationId: "update_user"
      produces:
        - "application/json"
      parameters:
        - name: "username"
          in: "path"
          description: ""
          required: true
          type: "string"
        - name: "password"
          in: "header"
          description: ""
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/UpdatedUser"
      responses:
        "200":
          description: "Password updated successfully"
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "shorturl.web.controllers.users_controller"
  /user/key/{username}:
    get:
      tags:
        - "user"
      summary: "Get key by user name"
      description: ""
      operationId: "get_key"
      produces:
        - "application/json"
      parameters:
        - name: "username"
          in: "path"
          description: "The username for which key is to be fetched."
          required: true
          type: "string"
        - name: "password"
          in: "header"
          description: ""
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiKeyObj"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "shorturl.web.controllers.users_controller"
    put:
      tags:
        - "user"
      summary: "Update current key with a new generated key"
      description: ""
      operationId: "update_key"
      produces:
        - "application/json"
      parameters:
        - name: "username"
          in: "path"
          description: "The username for which api key is to be updated."
          required: true
          type: "string"
        - name: "password"
          in: "header"
          description: ""
          required: true
          type: "string"
      responses:
        "200":
          description: "Successfully changed the api_key"
          schema:
            $ref: "#/definitions/ApiKeyObj"
        "400":
          description: "Invalid username or password supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "shorturl.web.controllers.users_controller"
  /favorite:
    get:
      tags:
        - "favorite"
      summary: "Get favorite urls by user name"
      description: "Get favorite urls by user name"
      operationId: "get_favorite"
      produces:
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          description: "api key of user"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful gives favorite url list"
          schema:
            $ref: "#/definitions/FavoriteUrlListObj"
        "400":
          description: "Wrong Api key"
        "404":
          description: "User not found"
      x-swagger-router-controller: "shorturl.web.controllers.favorite_controller"
    post:
      tags:
        - "favorite"
      summary: "Mark an existing url as favorite"
      description: "Mark an existing url as favorite"
      operationId: "mark_favorite"
      produces:
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          description: "api key for marking short url as favorite"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Shorturl to be marked favorite"
          required: true
          schema:
            $ref: "#/definitions/MarkFavoriteObj"
      responses:
        "200":
          description: "Url marked successfully"
        "406":
          description: "ShortUrl does not exists"
      x-swagger-router-controller: "shorturl.web.controllers.favorite_controller"
definitions:
  FavoriteUrlListObj:
    type: "object"
    properties:
      favorite_list:
        type: "array"
        items:
          type: "string"
    example:
      favorite_list: "[shorturl_1, shorturl_2, shorturl_3]"
  MarkFavoriteObj:
    type: "object"
    required:
      - "markfavorite"
      - "shorturl"
    properties:
      shorturl:
        type: "string"
      markfavorite:
        type: "string"
    example:
      shorturl: "shorturl"
      markfavorite: "0"
  CreateUrlObj:
    type: "object"
    required:
      - "long_url"
    properties:
      long_url:
        type: "string"
      username:
        type: "string"
      custom_alias:
        type: "string"
      time_to_live:
        type: "string"
    example:
      time_to_live: "100"
      custom_alias: "shorturl"
      long_url: "www.google.com"
      username: "username"
  ShortUrlObj:
    type: "object"
    required:
      - "shorturl"
    properties:
      shorturl:
        type: "string"
    example:
      shorturl: "shorturl"
  ApiKeyObj:
    type: "object"
    required:
      - "api_key"
    properties:
      api_key:
        type: "string"
    example:
      api_key: "api_key"
  User:
    type: "object"
    required:
      - "email"
      - "password"
      - "username"
    properties:
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
    example:
      username: "username"
      email: "email"
      password: "password"
  UpdatedUser:
    type: "object"
    required:
      - "newpassword"
    properties:
      newpassword:
        type: "string"
    example:
      newpassword: "newpassword"
