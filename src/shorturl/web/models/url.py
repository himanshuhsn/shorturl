# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from .. import util


class Url(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, long_url: str=None, username: str=None, custom_alias: str=None, time_to_live: str=None):  # noqa: E501
        """Url - a model defined in Swagger

        :param long_url: The long_url of this Url.  # noqa: E501
        :type long_url: str
        :param username: The username of this Url.  # noqa: E501
        :type username: str
        :param custom_alias: The custom_alias of this Url.  # noqa: E501
        :type custom_alias: str
        :param time_to_live: The time_to_live of this Url.  # noqa: E501
        :type time_to_live: str
        """
        self.swagger_types = {
            'long_url': str,
            'username': str,
            'custom_alias': str,
            'time_to_live': str
        }

        self.attribute_map = {
            'long_url': 'long_url',
            'username': 'username',
            'custom_alias': 'custom_alias',
            'time_to_live': 'time_to_live'
        }

        self._long_url = long_url
        self._username = username
        self._custom_alias = custom_alias
        self._time_to_live = time_to_live

    @classmethod
    def from_dict(cls, dikt) -> 'Url':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Url of this Url.  # noqa: E501
        :rtype: Url
        """
        return util.deserialize_model(dikt, cls)

    @property
    def long_url(self) -> str:
        """Gets the long_url of this Url.


        :return: The long_url of this Url.
        :rtype: str
        """
        return self._long_url

    @long_url.setter
    def long_url(self, long_url: str):
        """Sets the long_url of this Url.


        :param long_url: The long_url of this Url.
        :type long_url: str
        """
        if long_url is None:
            raise ValueError("Invalid value for `long_url`, must not be `None`")  # noqa: E501

        self._long_url = long_url

    @property
    def username(self) -> str:
        """Gets the username of this Url.


        :return: The username of this Url.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this Url.


        :param username: The username of this Url.
        :type username: str
        """

        self._username = username

    @property
    def custom_alias(self) -> str:
        """Gets the custom_alias of this Url.


        :return: The custom_alias of this Url.
        :rtype: str
        """
        return self._custom_alias

    @custom_alias.setter
    def custom_alias(self, custom_alias: str):
        """Sets the custom_alias of this Url.


        :param custom_alias: The custom_alias of this Url.
        :type custom_alias: str
        """

        self._custom_alias = custom_alias

    @property
    def time_to_live(self) -> str:
        """Gets the time_to_live of this Url.


        :return: The time_to_live of this Url.
        :rtype: str
        """
        return self._time_to_live

    @time_to_live.setter
    def time_to_live(self, time_to_live: str):
        """Sets the time_to_live of this Url.


        :param time_to_live: The time_to_live of this Url.
        :type time_to_live: str
        """

        self._time_to_live = time_to_live
