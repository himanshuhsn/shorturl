# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ..models.base_model_ import Model
from .. import util


class ShortUrlObj(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, short_url: str=None):  # noqa: E501
        """ShortUrlObj - a model defined in Swagger

        :param short_url: The short_url of this ShortUrlObj.  # noqa: E501
        :type short_url: str
        """
        self.swagger_types = {
            'short_url': str
        }

        self.attribute_map = {
            'short_url': 'short_url'
        }

        self._short_url = short_url

    @classmethod
    def from_dict(cls, dikt) -> 'ShortUrlObj':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ShortUrlObj of this ShortUrlObj.  # noqa: E501
        :rtype: ShortUrlObj
        """
        return util.deserialize_model(dikt, cls)

    @property
    def short_url(self) -> str:
        """Gets the short_url of this ShortUrlObj.


        :return: The short_url of this ShortUrlObj.
        :rtype: str
        """
        return self._short_url

    @short_url.setter
    def short_url(self, short_url: str):
        """Sets the short_url of this ShortUrlObj.


        :param short_url: The short_url of this ShortUrlObj.
        :type short_url: str
        """
        if short_url is None:
            raise ValueError("Invalid value for `short_url`, must not be `None`")  # noqa: E501

        self._short_url = short_url
